---
AWSTemplateFormatVersion: 2010-09-09

Parameters:

  ServerImageId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2

  ServerKeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Default: basic-documentdb

Mappings: {}

Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/24

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  PublicInternetRoute:
    Type: AWS::EC2::Route
    DependsOn:
      - InternetGateway
      - PublicInternetRouteTable
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicInternetRouteTable

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicInternetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PublicSubnet01:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs "" ]
      CidrBlock: 10.0.0.0/25
      VpcId: !Ref VPC

  PublicSubnet02:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 1, !GetAZs "" ]
      CidrBlock: 10.0.0.128/25
      VpcId: !Ref VPC

  PublicSubnet01RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicInternetRouteTable
      SubnetId: !Ref PublicSubnet01

  PublicSubnet02RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicInternetRouteTable
      SubnetId: !Ref PublicSubnet02

  DocumentDBClusterSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: DocumentDB Cluster Security Group
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 27017
          ToPort: 27017
          SourceSecurityGroupId: !Ref ServerSecurityGroup

  DocumentDBClusterParameterGroup:
    Type: AWS::DocDB::DBClusterParameterGroup
    Properties: 
      Description: DocumentDB Cluster Parameter Group
      Family: docdb4.0
      Parameters: {}

  DocumentDBSubnetGroup:
    Type: AWS::DocDB::DBSubnetGroup
    Properties: 
      DBSubnetGroupDescription: DocumentDB Subnet Group
      SubnetIds: 
        - !Ref PublicSubnet01
        - !Ref PublicSubnet02

  DocumentDBCluster:
    Type: AWS::DocDB::DBCluster
    Properties: 
      DBClusterParameterGroupName: !Ref DocumentDBClusterParameterGroup
      DBSubnetGroupName: !Ref DocumentDBSubnetGroup
      EngineVersion: 4.0.0
      MasterUsername: testuser
      MasterUserPassword: testuser
      Port: 27017
      VpcSecurityGroupIds: 
        - !Ref DocumentDBClusterSecurityGroup

  DocumentDBCluster01:
    Type: AWS::DocDB::DBInstance
    Properties: 
      DBClusterIdentifier: !Ref DocumentDBCluster
      DBInstanceClass: db.t3.medium

  ServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Server Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VPC

  ServerLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !Ref ServerImageId
        InstanceType: t3.medium
        KeyName: !Ref ServerKeyName
        NetworkInterfaces:
          # AssociatePublicIpAddress: true would not be common in production
          # environments but is suffecient for developing our own understanding
          - AssociatePublicIpAddress: true
            DeviceIndex: 0
            Groups: [ !GetAtt ServerSecurityGroup.GroupId ]
        # wget https://s3.amazonaws.com/rds-downloads/rds-combined-ca-bundle.pem
        UserData: |
            #!/bin/bash -
            cd /var/tmp
            wget https://s3.amazonaws.com/rds-downloads/rds-combined-ca-bundle.pem
            wget https://repo.mongodb.org/yum/amazon/2/mongodb-org/5.0/x86_64/RPMS/mongodb-org-shell-5.0.3-1.amzn2.x86_64.rpm
            yum -y localinstall mongodb-org-shell-5.0.3-1.amzn2.x86_64.rpm
            mongo --ssl --host documentdbcluster-nhhiwjadlmgo.cluster-cqqr62fdusov.us-west-2.docdb.amazonaws.com:27017 --sslCAFile rds-combined-ca-bundle.pem --username testuser --password testuser


  ServerScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: 1
      LaunchTemplate:
        LaunchTemplateId: !Ref ServerLaunchTemplate
        Version: !GetAtt ServerLaunchTemplate.LatestVersionNumber
      MaxSize: 1
      MinSize: 1
      VPCZoneIdentifier:
        - !Ref PublicSubnet01
        - !Ref PublicSubnet02

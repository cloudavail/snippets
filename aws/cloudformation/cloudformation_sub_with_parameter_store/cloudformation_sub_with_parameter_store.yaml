AWSTemplateFormatVersion: '2010-09-09'

Description: Create a Resource with a Value using Parameter Store Conditions

Parameters:

  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev

Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/24
      EnableDnsSupport: true
      EnableDnsHostnames: true

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  PublicInternetRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicInternetRouteTable

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicInternetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PublicSubnet01:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/25
      AvailabilityZone: !Select 
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      VpcId: !Ref VPC

  PublicSubnet01RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicInternetRouteTable
      SubnetId: !Ref PublicSubnet01

  PublicSubnet02:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.128/25
      AvailabilityZone: !Select 
        - 1
        - Fn::GetAZs: !Ref AWS::Region
      VpcId: !Ref VPC

  PublicSubnet02RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicInternetRouteTable
      SubnetId: !Ref PublicSubnet02

  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: rds-security-group
      VpcId: !Ref VPC

  RDSSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      SubnetIds:
      - !Ref PublicSubnet01
      - !Ref PublicSubnet02
      DBSubnetGroupDescription: rds-subnet-group

  RDSDBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 20
      DBInstanceClass: db.t4g.micro 
      DBSubnetGroupName: !Ref RDSSubnetGroup
      Engine: MySQL
      MasterUsername: test
      # note that !Sub {{resolve:ssm-secure:/masteruserpassword}}-${Environment}
      # results in an error
      # An error occurred (ValidationError) when calling the ValidateTemplate operation: Template format error: YAML not well-formed. (line 94, column 74)
      MasterUserPassword: !Sub "{{resolve:ssm-secure:/masteruserpassword}}-${Environment}"
      PubliclyAccessible: true
      StorageEncrypted: true
      StorageType: gp3
      VPCSecurityGroups:
      - !Ref RDSSecurityGroup

Mappings: {}
